{"version":3,"sources":["myGraphic.js"],"names":["cc","Class","extends","Component","properties","ctx","get","_ctx","node","getComponent","Graphics","set","value","onLoad","lineWidth","strokeColor","Color","RED","lineTo","stroke","on","Node","EventType","MOUSE_DOWN","onMouseDown","MOUSE_UP","onMouseUp","MOUSE_MOVE","onMouseMove","console","log","start","event","c","PhysicsPolygonCollider","startPosition","getLocation","offset","v2","x","y","startDraw","clear","moveTo","apply"],"mappings":"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","file":"myGraphic.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        ctx: {\r\n            get:function () {\r\n                this._ctx = this.node.getComponent(cc.Graphics);\r\n                return this._ctx;\r\n            },\r\n            set:function (value) {\r\n                this._ctx = value;\r\n            }\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.ctx = this.node.getComponent(cc.Graphics);\r\n        this.ctx.lineWidth = 5;\r\n        this.ctx.strokeColor = cc.Color.RED;\r\n        this.ctx.lineTo(500,500)\r\n        this.ctx.lineTo(100,100)\r\n        this.ctx.stroke();\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN,this.onMouseDown, this.ctx,true);\r\n        this.node.on(cc.Node.EventType.MOUSE_UP,this.onMouseUp, this.ctx,true);\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE,this.onMouseMove, this.ctx,true);\r\n        console.log(this.ctx);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    onMouseDown(event){\r\n        // console.log(event.getLocation());\r\n        // this.moveTo(event.getLocation().x,event.getLocation().y);\r\n        // this.strokeColor = cc.Color.RED;\r\n        var c = this.getComponent(cc.PhysicsPolygonCollider);\r\n        this.startPosition = event.getLocation();\r\n        console.log(c.offset);\r\n        c.offset = cc.v2(this.startPosition.x,this.startPosition.y);\r\n        this.startDraw = true;\r\n        // event.target.ctx.lineTo(event.getLocation());\r\n    },\r\n    onMouseUp(event){\r\n        console.log(event);\r\n        // this.lineTo(event.getLocation().x,event.getLocation().y);\r\n        // this.stroke();\r\n        this.startDraw = false;\r\n    },\r\n    onMouseMove(event){\r\n        if(this.startDraw){\r\n            this.clear();\r\n            this.moveTo(this.startPosition.x,this.startPosition.y);\r\n            this.lineTo(event.getLocation().x,event.getLocation().y);\r\n            this.stroke();\r\n            var c = this.getComponent(cc.PhysicsPolygonCollider);\r\n            c.apply()\r\n            console.log(c);\r\n            console.log(c.offset,this.startPosition,event.getLocation().x,event.getLocation().y);\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}