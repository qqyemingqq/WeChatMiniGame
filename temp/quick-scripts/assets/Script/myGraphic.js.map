{"version":3,"sources":["myGraphic.js"],"names":["cc","Class","extends","Component","properties","ctx","get","_ctx","set","value","console","log","onLoad","node","getComponent","Graphics","lineWidth","strokeColor","Color","RED","moveTo","on","Node","EventType","MOUSE_DOWN","onMouseDown","start","event","onMouseUp","getButton","onMouseMove"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAILC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,aAAK;AACDC,eADC,iBACM;AACH,uBAAO,KAAKC,IAAZ;AACH,aAHA;AAIDC,eAJC,eAIIC,KAJJ,EAIW;AACR,qBAAKF,IAAL,GAAYE,KAAZ;AACAC,wBAAQC,GAAR,CAAYF,KAAZ;AACH;AAPA;AARG,KAJP;AAsBL;;AAEAG,UAxBK,oBAwBK;AACN,aAAKP,GAAL,GAAW,KAAKQ,IAAL,CAAUC,YAAV,CAAuBd,GAAGe,QAA1B,CAAX;AACA,aAAKV,GAAL,CAASW,SAAT,GAAqB,CAArB;AACA,aAAKX,GAAL,CAASY,WAAT,GAAuBjB,GAAGkB,KAAH,CAASC,GAAhC;AACA,aAAKd,GAAL,CAASe,MAAT,CAAgB,GAAhB,EAAoB,GAApB;AACA,aAAKP,IAAL,CAAUQ,EAAV,CAAarB,GAAGsB,IAAH,CAAQC,SAAR,CAAkBC,UAA/B,EAA0C,KAAKC,WAA/C,EAA4D,KAAKZ,IAAjE,EAAsE,IAAtE;AACAH,gBAAQC,GAAR,CAAY,IAAZ;AACH,KA/BI;AAiCLe,SAjCK,mBAiCI,CAER,CAnCI;AAoCLD,eApCK,uBAoCOE,KApCP,EAoCa;AACdjB,gBAAQC,GAAR,CAAY,KAAKN,GAAjB;;AAEA;AACH,KAxCI;AAyCLuB,aAzCK,qBAyCKD,KAzCL,EAyCW;AACZ,YAAGA,MAAME,SAAN,OAAsB,CAAzB,EAA2B;AACvB;AACH;AACJ,KA7CI;AA8CLC,eA9CK,uBA8COH,KA9CP,EA8Ca,CAEjB;AADG;;AAEJ;;AAjDK,CAAT","file":"myGraphic.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        ctx: {\r\n            get () {\r\n                return this._ctx;\r\n            },\r\n            set (value) {\r\n                this._ctx = value;\r\n                console.log(value);\r\n            }\r\n        },\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.ctx = this.node.getComponent(cc.Graphics);\r\n        this.ctx.lineWidth = 5;\r\n        this.ctx.strokeColor = cc.Color.RED;\r\n        this.ctx.moveTo(200,200);\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN,this.onMouseDown, this.node,true);\r\n        console.log(this);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    onMouseDown(event){\r\n        console.log(this.ctx);\r\n\r\n        // event.target.ctx.lineTo(event.getLocation());\r\n    },\r\n    onMouseUp(event){\r\n        if(event.getButton() === 0){\r\n            // console.log(event);\r\n        }\r\n    },\r\n    onMouseMove(event){\r\n        // console.log(event);\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}