{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\HelloWorld.js"],"names":["cc","Class","extends","Component","properties","label","default","type","Label","text","onLoad","onCollisionStay","other","self","console","log","update","dt","onCollisionEnter","world","aabb","preAabb","t","transform","r","radius","p","position","ps","points"],"mappings":";;;;;;;;AAAAA,GAAGC,KAAH;AACIC,aAASF,GAAGG,SADhB;;AAGIC,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SADC;AAKR;AACAC,cAAM;AANE,KAHhB;;AAYI;AACAC,YAAQ,kBAAY;AAChB;AACH,KAfL;AAgBIC,qBAAiB,yBAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACpCC,gBAAQC,GAAR,CAAY,mBAAZ;AACH,KAlBL;AAmBI;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACH,KAtBL;AAuBI;;;;;AAKJC,sBAAkB,0BAAUN,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQC,GAAR,CAAY,oBAAZ;;AAEA;AACA,YAAII,QAAQN,KAAKM,KAAjB;;AAEA;AACA,YAAIC,OAAOD,MAAMC,IAAjB;;AAEA;AACA,YAAIC,UAAUF,MAAME,OAApB;;AAEA;AACA,YAAIC,IAAIH,MAAMI,SAAd;;AAEA;AACA,YAAIC,IAAIL,MAAMM,MAAd;AACA,YAAIC,IAAIP,MAAMQ,QAAd;;AAEA;AACA,YAAIC,KAAKT,MAAMU,MAAf;AACH;AAjDD,sBAuDiB,yBAAUjB,KAAV,EAAiBC,IAAjB,EAAuB;AACpCC,YAAQC,GAAR,CAAY,mBAAZ;AACH,CAzDD","file":"HelloWorld.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        label: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // defaults, set visually when attaching this script to the Canvas\r\n        text: 'Hello, World!'\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // this.label.string = this.text;\r\n    },\r\n    onCollisionStay: function (other, self) {\r\n        console.log('on collision stay');\r\n    },\r\n    // called every frame\r\n    update: function (dt) {\r\n        // console.log('object');\r\n    },\r\n    /**\r\n * 当碰撞产生的时候调用\r\n * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n */\r\nonCollisionEnter: function (other, self) {\r\n    console.log('on collision enter');\r\n\r\n    // 碰撞系统会计算出碰撞组件在世界坐标系下的相关的值，并放到 world 这个属性里面\r\n    var world = self.world;\r\n\r\n    // 碰撞组件的 aabb 碰撞框\r\n    var aabb = world.aabb;\r\n\r\n    // 节点碰撞前上一帧 aabb 碰撞框的位置\r\n    var preAabb = world.preAabb;\r\n\r\n    // 碰撞框的世界矩阵\r\n    var t = world.transform;\r\n\r\n    // 以下属性为圆形碰撞组件特有属性\r\n    var r = world.radius;\r\n    var p = world.position;\r\n\r\n    // 以下属性为 矩形 和 多边形 碰撞组件特有属性\r\n    var ps = world.points;\r\n},\r\n/**\r\n * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\r\n * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n */\r\nonCollisionStay: function (other, self) {\r\n    console.log('on collision stay');\r\n},\r\n});\r\n"]}